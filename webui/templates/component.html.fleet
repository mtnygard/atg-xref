<div id="component">
  <h1><(:component data)></h1>

  <div>
    <h2>Definitions</h2>
    
    <(map (fn [d] ">
      <div class="definition-in-module">
        <h3><(module-link (:module d))></h3>

        <(if-not (nil? (:scope d)) ">
          <p>Scope: <(:scope d)></p>
        <")>

        <div class="source">
          <div class="pathname"><(:source d)></div>
          <script type="syntaxhighlighter" class="brush:properties"><![CDATA[<(:body d)>]]></script>
        </div>
      </div>
    <") (:component-defs data))>
  </div>
</div>

<script type="text/javascript">
SyntaxHighlighter.autoloader(
  'properties /js/shBrushProperties.js'
);

SyntaxHighlighter.defaults['auto-links'] = true;
 
SyntaxHighlighter.all();

var references = [
  <(map (fn [cl] ">
    { "pat": new RegExp("<(clojure.contrib.string/replace-str "." "\\\\." cl)>", "gm"), "text": "<(str cl)>", "link": "<(str "/classes/" cl)>" },
  <") (:classes data))>

  <(map (fn [c] ">
    { "pat": new RegExp("<(str c)>", "gm"), "text": "<(str c)>", "link": "<(str "/component/" c)>" },
  <") (seq (:uses data)))>
];

$(window).load(function() {
  $(".source").each(function() {
    for(var i = 0; i < references.length; i++) {
      var p = references[i].pat;
      var t = references[i].text;
      var l = references[i].link;
      $(this).html($(this).html().replace(p, "<a href='"+l+"'>" + t + "</a>"));
    }
  });
  console.log('finished injecting links');
});

</script>

